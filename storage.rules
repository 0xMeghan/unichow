rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isRestaurantOwner(restaurantId) {
      return request.auth != null && 
        request.auth.uid == restaurantId &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'restaurant';
    }

    // Restaurant files
    match /restaurants/{restaurantId}/{fileName} {
      allow read: if true;
      allow write: if isRestaurantOwner(restaurantId) || isAdmin();
    }

    // Verification documents
    match /verification/{restaurantId}/{fileName} {
      allow read: if isRestaurantOwner(restaurantId) || isAdmin();
      allow write: if isRestaurantOwner(restaurantId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
